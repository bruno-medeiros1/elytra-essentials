# --- ProGuard Configuration for a Spigot Plugin ---

# This tells ProGuard to not warn about missing classes from the Spigot API,
# which are provided by the server at runtime.
-ignorewarnings

# Keep the main plugin class, as Bukkit needs to find it by its full name from plugin.yml.
# Replace this with the actual path to your main class.
-keep public class org.bruno.elytraEssentials.ElytraEssentials extends org.bukkit.plugin.java.JavaPlugin {
    public *;
}

# Keep all classes that implement Listener and their public @EventHandler methods.
# This is crucial for your events to work.
-keep public class * implements org.bukkit.event.Listener {
    public void *(org.bukkit.event.**);
}

# Keep all command classes and their required methods.
-keep public class * implements org.bukkit.command.CommandExecutor {
    public boolean onCommand(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]);
}
-keep public class * implements org.bukkit.command.TabCompleter {
    public java.util.List onTabComplete(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]);
}

# Keep your custom ISubCommand interface and its Execute method.
-keep public interface org.bruno.elytraEssentials.interfaces.ISubCommand {
    public boolean Execute(org.bukkit.command.CommandSender, java.lang.String[]);
}
-keep class * implements org.bruno.elytraEssentials.interfaces.ISubCommand {
    public <init>(...);
    public boolean Execute(org.bukkit.command.CommandSender, java.lang.String[]);
}

# Keep your PlaceholderAPI expansion class.
-keep public class org.bruno.elytraEssentials.placeholders.ElytraEssentialsPlaceholders { *; }

# Keep annotations that Bukkit uses at runtime.
-keepattributes *Annotation*,Signature

# General rules for reflection and native methods.
-keepclassmembers class * {
    @org.bukkit.event.EventHandler *;
}
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
